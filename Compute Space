#include <stdio.h>
int computeSpace(int);
int computeInteger(int);
int computeDecimal(int);
int computeChar(int);
int validation (char, int);

int main(void) {
    int howMany = 0;
    scanf("%d\n",&howMany);
    computeSpace(howMany);
    return 0;
}

int computeSpace(int x) {
    int num[x], i = 0, result = 0, con = 0, o = 0,total = 0;
    char code[x], codes,codeValue[] = {'i','c','d'};
    for(i = 0; i < x; i++) {
        if (result == 0) {
            scanf("%d %s\n",&num[i],&code[i]);
            codes = code[i];
            result = validation(codes,con);
        } else {
            return 0;
        }
    }
    for(i = 0; i < x; i++) {
        if(code[i] == codeValue[0]||code[i] == codeValue[1]||code[i] == codeValue[2]) {
            if (code[i] == codeValue[0]) {
               total = total + computeInteger(num[i]);
            } 
            else if (code[i] == codeValue[1]) {
                total = total + computeChar(num[i]);
            }
            else if (code[i] == codeValue[2]) {
                total = total + computeDecimal(num[i]);
            }
        }
    }
    return printf ("%d bytes",total);
    return 0;
}
 
int validation (char codes, int con) {
    char codeValue[] = {'i','c','d'};
    int i = 0;
        if (codes == codeValue[0]||
        codes == codeValue[1]||codes == codeValue[2]) {
            return 0;
        } else {
            printf("Invalid tracking code type");
            return 1;
        }
        return(0);
    }
    
int computeInteger(int x) {
    if (x <= 0) {
        return(0);
    }
    else if (x==1) {
        return 4;
    } 
    else {
        return 4 + computeInteger(x -1);
    }
    return 0;
}

int computeChar(int x) {
    if (x <= 0) {
        return(0);
    }
    else if (x==1) {
        return 1;
    } else {
        return 1 + computeChar(x -1);
    }
    return 0;
}

int computeDecimal(int x) {
    if (x <= 0) {
        return(0);
    }
    else if (x==1) {
        return 8;
    } else {
        return 8 + computeDecimal(x -1);
    }
    return 0;
} 
